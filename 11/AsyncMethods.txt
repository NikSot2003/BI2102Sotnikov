import 'dart:async'; // Импортируем библиотеку для работы с асинхронными операциями (Future, async/await).
import 'Machine.dart'; // Импортируем класс Machine для доступа к кофемашине и её функционалу.

class AsyncMethods { // Объявление класса, содержащего асинхронные методы для работы с кофемашиной.
  final Machine machine; // Поле для хранения экземпляра кофемашины.

  AsyncMethods(this.machine); // Конструктор, инициализирует поле `machine` с переданным экземпляром кофемашины.

  // Метод для нагрева воды.
  Future<void> heatWater() async { // Метод, который выполняет асинхронную операцию с типом возвращаемого значения Future<void>.
    print('Нагреваем воду...'); // Выводим сообщение в консоль, что начинаем нагрев воды.
    await Future.delayed(const Duration(seconds: 3)); // Задержка на 3 секунды, чтобы симулировать время нагрева воды.
    print('Вода нагрета!'); // После задержки выводим сообщение, что вода нагрета.
  }

  // Метод для заваривания кофе.
  Future<void> brewCoffee() async { // Метод, который выполняет асинхронную операцию с типом возвращаемого значения Future<void>.
    print('Завариваем кофе...'); // Выводим сообщение в консоль, что начинаем заваривать кофе.
    await Future.delayed(const Duration(seconds: 5)); // Задержка на 5 секунд, чтобы симулировать время заваривания кофе.
    print('Кофе готово!'); // После задержки выводим сообщение, что кофе готово.
  }

  // Метод для взбивания молока.
  Future<void> frothMilk() async { // Метод, который выполняет асинхронную операцию с типом возвращаемого значения Future<void>.
    print('Взбиваем молоко...'); // Выводим сообщение в консоль, что начинаем взбивать молоко.
    await Future.delayed(const Duration(seconds: 5)); // Задержка на 5 секунд, чтобы симулировать процесс взбивания молока.
    print('Молоко взбито!'); // После задержки выводим сообщение, что молоко взбито.
  }

  // Метод для смешивания кофе и молока.
  Future<void> mixCoffeeAndMilk() async { // Метод, который выполняет асинхронную операцию с типом возвращаемого значения Future<void>.
    print('Смешиваем кофе и молоко...'); // Выводим сообщение в консоль, что начинаем смешивать кофе и молоко.
    await Future.delayed(const Duration(seconds: 3)); // Задержка на 3 секунды, чтобы симулировать время смешивания.
    print('Кофе с молоком готово!'); // После задержки выводим сообщение, что кофе с молоком готово.
  }
}
